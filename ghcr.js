// Generated by CoffeeScript 1.4.0
(function() {
  var LocalStore, RedisStore, Store, formatKey, getNamespace, render, user;

  getNamespace = function() {
    var href;
    href = $('h1 a.js-current-repository').attr('href');
    return ("ghcr" + href).split('/').join(':');
  };

  formatKey = function(hash) {
    return "" + (getNamespace()) + ":" + hash;
  };

  LocalStore = {
    mget: function(ks) {
      var k, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = ks.length; _i < _len; _i++) {
        k = ks[_i];
        _results.push([k, this.get(k)]);
      }
      return _results;
    },
    get: function(k) {
      return localStorage.getItem(formatKey(k));
    },
    set: function(k, v) {
      return localStorage.setItem(formatKey(k), v);
    },
    del: function(k) {
      return localStorage.removeItem(formatKey(k));
    }
  };

  RedisStore = {
    mget: function(ks) {
      return TODO;
    },
    get: function(k) {
      return TODO;
    },
    set: function(k, v) {
      return TODO;
    },
    del: function(k) {
      return TODO;
    }
  };

  Store = LocalStore;

  user = $.trim($("#user-links .name").text());

  render = function() {
    var $btn, $item, done, e, id, ids, renderButton, _i, _len, _ref, _ref1, _results;
    if ($(".breadcrumb").text().match(/Commit History/)) {
      ids = (function() {
        var _i, _len, _ref, _results;
        _ref = $("li.commit .commit-links .js-zeroclipboard");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          e = _ref[_i];
          _results.push($(e).data("clipboard-text"));
        }
        return _results;
      })();
      _ref = Store.mget(ids);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], id = _ref1[0], done = _ref1[1];
        $item = $("li.commit .commit-links .js-zeroclipboard[data-clipboard-text=" + id + "]").parents("li");
        if (done) {
          _results.push($item.addClass("ghcr-done"));
        } else {
          _results.push($item.addClass("ghcr-pending"));
        }
      }
      return _results;
    } else if ($(".full-commit").size() > 0) {
      id = $(".full-commit .sha.js-selectable-text").text();
      done = Store.get(id);
      $btn = function() {
        var lbl;
        lbl = done ? "Make pending" : "Accept";
        return $("<button class='minibutton'>" + lbl + "</button>").click(function() {
          if (done) {
            Store.del(id);
            done = null;
          } else {
            Store.set(id, user);
            done = user;
          }
          return renderButton();
        });
      };
      renderButton = function() {
        var $box, cls, str, _ref2;
        $("#ghcr-box").remove();
        _ref2 = done ? ["ghcr-done", "Commit accepted by <a href='https://github.com/" + done + "'>" + done + "<a/>"] : ["ghcr-pending", "Code review pending"], cls = _ref2[0], str = _ref2[1];
        $box = $("<div id='ghcr-box' class='" + cls + "'><span>" + str + "</span> </div>");
        $box.append($btn());
        return $("#js-repo-pjax-container").prepend($box);
      };
      return renderButton();
    }
  };

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    console.log('trigger render');
    return render();
  });

}).call(this);

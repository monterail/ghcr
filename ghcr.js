// Generated by CoffeeScript 1.4.0
(function() {
  var $btn, $item, LocalStore, RedisStore, Store, done, e, id, ids, render, user, _i, _len, _ref, _ref1;

  LocalStore = {
    mget: function(ks) {
      var k, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = ks.length; _i < _len; _i++) {
        k = ks[_i];
        _results.push([k, this.get(k)]);
      }
      return _results;
    },
    get: function(k) {
      return localStorage.getItem(this.key(k));
    },
    set: function(k, v) {
      return localStorage.setItem(this.key(k), v);
    },
    del: function(k) {
      return localStorage.removeItem(this.key(k));
    },
    key: function(k) {
      return "ghcr:" + k;
    }
  };

  RedisStore = {
    mget: function(ks) {
      return TODO;
    },
    get: function(k) {
      return TODO;
    },
    set: function(k, v) {
      return TODO;
    },
    del: function(k) {
      return TODO;
    }
  };

  Store = LocalStore;

  user = $.trim($("#user-links .name").text());

  if ($(".breadcrumb").text().match(/Commit History/)) {
    ids = (function() {
      var _i, _len, _ref, _results;
      _ref = $("li.commit .commit-links .js-zeroclipboard");
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        e = _ref[_i];
        _results.push($(e).data("clipboard-text"));
      }
      return _results;
    })();
    _ref = Store.mget(ids);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      _ref1 = _ref[_i], id = _ref1[0], done = _ref1[1];
      $item = $("li.commit .commit-links .js-zeroclipboard[data-clipboard-text=" + id + "]").parents("li");
      if (done) {
        $item.addClass("ghcr-done");
      } else {
        $item.addClass("ghcr-pending");
      }
    }
  } else if ($(".full-commit").size() > 0) {
    id = $(".sha.js-selectable-text").text();
    done = Store.get(id);
    $btn = function() {
      var lbl;
      lbl = done ? "Make pending" : "Accept";
      return $("<button class='minibutton'>" + lbl + "</button>").click(function() {
        if (done) {
          Store.del(id);
          done = null;
        } else {
          Store.set(id, user);
          done = user;
        }
        return render();
      });
    };
    render = function() {
      var $box, cls, str, _ref2;
      $("#ghcr-box").remove();
      _ref2 = done ? ["ghcr-done", "Commit accepted by <a href='https://github.com/" + done + "'>" + done + "<a/>"] : ["ghcr-pending", "Code review pending"], cls = _ref2[0], str = _ref2[1];
      $box = $("<div id='ghcr-box' class='" + cls + "'><span>" + str + "</span> </div>");
      $box.append($btn());
      return $("#js-repo-pjax-container").prepend($box);
    };
  }

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    console.log('trigger render');
    return render();
  });

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var API, GHCR;

  API = function(url, repo) {
    return {
      commits: function(ids, cb) {
        return $.post("" + url + "/commits", {
          repo: repo,
          ids: ids
        }, cb, 'json');
      },
      commit: function(id, cb) {
        return $.getJSON("" + url + "/commit", {
          repo: repo,
          id: id
        }, cb);
      },
      save: function(data, cb) {
        return $.post("" + url + "/save", $.extend({}, data, {
          repo: repo
        }), cb);
      }
    };
  };

  GHCR = {
    init: function(apiUrl, repo) {
      this.api = API(apiUrl, repo);
      return this.user = $.trim($("#user-links .name").text());
    },
    commitsPage: function() {
      var e, ids;
      ids = (function() {
        var _i, _len, _ref, _results;
        _ref = $("li.commit .commit-links .js-zeroclipboard");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          e = _ref[_i];
          _results.push($(e).data("clipboard-text"));
        }
        return _results;
      })();
      return this.api.commits(ids, function(commits) {
        var $item, commit, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = commits.length; _i < _len; _i++) {
          commit = commits[_i];
          $item = $("li.commit .commit-links .js-zeroclipboard[data-clipboard-text=" + commit.id + "]").parents("li");
          commit.status || (commit.status = "pending");
          _results.push($item.addClass("ghcr-" + commit.status));
        }
        return _results;
      });
    },
    commitPage: function() {
      var id, render,
        _this = this;
      id = $(".full-commit .sha.js-selectable-text").text();
      render = function(commit) {
        var $box, $btn, btnlbl, fun, info;
        if (commit == null) {
          commit = {};
        }
        commit.status || (commit.status = "pending");
        commit.id || (commit.id = id);
        switch (commit.status) {
          case "accepted":
            fun = function() {
              commit.status = "pending";
              commit.user = _this.user;
              _this.api.save(commit);
              return render(commit);
            };
            btnlbl = "Make pending";
            console.log(commit.created_at);
            info = "Commit accepted by <a href='https://github.com/" + commit.user + "'>" + commit.user + "<a/> at " + commit.created_at;
            break;
          default:
            fun = function() {
              commit.status = "accepted";
              commit.user = _this.user;
              _this.api.save(commit);
              return render(commit);
            };
            btnlbl = "Accept";
            info = "Code review pending";
        }
        $btn = $("<button class='minibutton'>" + btnlbl + "</button>").click(fun);
        $("#ghcr-box").remove();
        $box = $("<div id='ghcr-box' class='ghcr-" + commit.status + "'><span>" + info + "</span> </div>");
        $box.append($btn);
        return $("#js-repo-pjax-container").prepend($box);
      };
      return this.api.commit(id, render);
    }
  };

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    var apiUrl, chunks, repo;
    chunks = window.location.pathname.split("/");
    repo = "" + chunks[1] + "/" + chunks[2];
    apiUrl = 'http://localhost:9393/ghcr';
    GHCR.init(apiUrl, repo);
    switch (chunks[3]) {
      case "commits":
        return GHCR.commitsPage();
      case "commit":
        return GHCR.commitPage();
    }
  });

}).call(this);
